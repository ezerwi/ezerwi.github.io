<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-07T00:54:27+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">gitgitWi’s gitgit pages</title><subtitle>서른 넘어 개발자가 된 깃깃위</subtitle><author><name>gitgitWi</name></author><entry><title type="html">Blogdown으로 블로그 만들기</title><link href="http://localhost:4000/Blogdown_pages/" rel="alternate" type="text/html" title="Blogdown으로 블로그 만들기" /><published>2020-04-06T00:00:00+09:00</published><updated>2020-04-06T00:00:00+09:00</updated><id>http://localhost:4000/Blogdown_pages</id><content type="html" xml:base="http://localhost:4000/Blogdown_pages/"></content><author><name>gitgitWi</name></author></entry><entry><title type="html">2020 상반기 LINE online coding test 후기..</title><link href="http://localhost:4000/career/python/2020_%EC%83%81%EB%B0%98%EA%B8%B0_LINE-_online_coding_test_%ED%9B%84%EA%B8%B0/" rel="alternate" type="text/html" title="2020 상반기 LINE online coding test 후기.." /><published>2020-04-05T00:00:00+09:00</published><updated>2020-04-05T00:00:00+09:00</updated><id>http://localhost:4000/career/python/2020_%EC%83%81%EB%B0%98%EA%B8%B0_LINE%20_online_coding_test_%ED%9B%84%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/career/python/2020_%EC%83%81%EB%B0%98%EA%B8%B0_LINE-_online_coding_test_%ED%9B%84%EA%B8%B0/">&lt;h1 id=&quot;2020-상반기-line-online-coding-test-후기&quot;&gt;2020 상반기 LINE online coding test 후기..&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2020-04-05-LINE-newbie-test_bv59le5a1.png&quot; alt=&quot;2020-04-05-LINE-newbie-test&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;정말 말그대로, 참가하는데 의의를 뒀다&lt;/p&gt;

&lt;p&gt;개발 배운지 아직 반년도 안됐고, 말로만 듣던 코딩 테스트는 이번이 첫 경험이기 때문에 뭔가 될 거란 생각하는게 이상하지..ㅋㅋ&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AWS-Docker&lt;/code&gt;에 빠져서 밤새 유튜브 보고 따라해보느라,
6시반에 잠깐 잤다가 일어나서 샤워하고 시간 맞춰서 프로그래머스 들어간거라 정신도 없었다&lt;/p&gt;

&lt;p&gt;6문제 중 홀수번 문제들만 간신히 풀어서 Test Case는 모두 통과했는데,
실제 case들은 어떻게 될지 모르겠다&lt;/p&gt;

&lt;p&gt;한 문제 정도는 쉽게 몸풀고 가라고 준거 같은데, 그거도 눈으로만 봤던거라 꽤 오래 걸렸다 ㅋㅋㅋ  &lt;em&gt;&lt;del&gt;얼마전까지 1일-1알고리즘 퀴즈하던 것도 안하다 보니 환경 세팅용으로 준 예제도 버벅거렸다..ㅋㅋㅋㅋㅋㅋ&lt;/del&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;LINE 출제팀 인터뷰에서 (&lt;a href=&quot;https://engineering.linecorp.com/ko/blog/2020-line-sw-developer-recruit-coding-test/&quot;&gt;LINE Engineering &amp;gt; LINE 신입 SW 개발자 코딩 테스트, 이렇게 만들어졌습니다&lt;/a&gt;) 알고리즘 문제뿐만 아니라 구현 문제도 출제했다고 했다&lt;/p&gt;

&lt;p&gt;그래서 알고리즘 모르면 노가다스럽게 풀어서 풀릴 수도 있는데, 시간이 문제인 문제들도 있었고 그 노가다로 풀 방법 생각하는 것도 시간이 오래걸렸다..&lt;/p&gt;

&lt;p&gt;그나마 DFS/BFS, 이진트리, 그래프 정도 수준의 문제는 없지 않았나.. 정렬, 스택 정도까지만 해도 풀려면 풀 수 있는 문제 아니었나 싶다.. 내가 파악을 못했는지 모르겠지만 ㅋㅋ&lt;/p&gt;

&lt;p&gt;암튼 코딩 테스트 첫 경험을 하면서 나름의 가능성을 볼 수 있었다
열씸히 해보는 수밖에~!!&lt;/p&gt;</content><author><name>gitgitWi</name></author><category term="LINE" /><category term="취준기" /><category term="Python" /><summary type="html">2020 상반기 LINE online coding test 후기..</summary></entry><entry><title type="html">Frequent Git Error Messages</title><link href="http://localhost:4000/git/errors/Git-Error/" rel="alternate" type="text/html" title="Frequent Git Error Messages" /><published>2020-04-05T00:00:00+09:00</published><updated>2020-04-05T00:00:00+09:00</updated><id>http://localhost:4000/git/errors/Git-Error</id><content type="html" xml:base="http://localhost:4000/git/errors/Git-Error/">&lt;h2 id=&quot;non-fast-forward&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;non-fast-forward&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;특별한 문제를 일으키지 않았는데도, non-fast-forward 메시지와 함께 &lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt;가 rejected되는 경우가 있다&lt;/p&gt;

&lt;p&gt;이 에러가 발생하는 원인은 여러가지인 듯&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin master

&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;rejected]        master -&amp;gt; master &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;non-fast-forward&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
error: failed to push some refs to &lt;span class=&quot;s1&quot;&gt;'https://github.com/gitgitWi/ezerwi'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;해결방법&quot;&gt;해결방법&lt;/h4&gt;

&lt;dl&gt;
  &lt;dt&gt;원인 01&lt;/dt&gt;
  &lt;dd&gt;&lt;strong&gt;GitHub에 저장한 내용 - Local에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt;한 내용 중 겹치는 것이 하나도 없는 경우&lt;/strong&gt;&lt;/dd&gt;
  &lt;dd&gt;
    &lt;p&gt;GitHub는 Remote repo와 Local repo 사이에 공통분모 없는 상태에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;merge&lt;/code&gt; 시도할 경우 원칙적으로 차단&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;참고 : &lt;a href=&quot;https://devlog.jwgo.kr/2018/03/09/resolving-git-pull-problem/&quot;&gt;devlog.jwgo.kr&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;아래와 같이 history와 무관하게 강제적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;pull&lt;/code&gt; 허용시킴&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git pull origin master &lt;span class=&quot;nt&quot;&gt;--allow-unrelated-histories&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;GitHub Desktop 을 사용하는 경우 문제가 있는 파일을 수정하도록 파일을 열어줌, 파일을 수정하여 저장한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/dd&gt;
&lt;/dl&gt;</content><author><name>gitgitWi</name></author><category term="Git" /><category term="Github" /><category term="Error Messages" /><summary type="html">non-fast-forward</summary></entry><entry><title type="html">LN-Docker-동빈나’s Docker 활용 1강~</title><link href="http://localhost:4000/study/docker/" rel="alternate" type="text/html" title="LN-Docker-동빈나's Docker 활용 1강~" /><published>2020-04-04T00:00:00+09:00</published><updated>2020-04-04T00:00:00+09:00</updated><id>http://localhost:4000/study/</id><content type="html" xml:base="http://localhost:4000/study/docker/">&lt;!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 --&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- [AWS 서버 인스턴스 생성](#aws-)
		- [서버 인스턴스](#-)
		- [AMI 선택](#ami-)
		- [인스턴스 유형 선택](#-)
		- [Key pair](#key-pair)
			- [Error 같은 Normal Message](#error-normal-message)
- [보다 편한 EC2 활용을 위한 `Jupyter Notebook` 설치](#-ec2-jupyter-notebook-)
		- [1. check python3 version](#1-check-python3-version)
		- [2. python3 개발환경 설치위한 pip install](#2-python3-pip-install)
		- [3. pip를 통해 notebook install](#3-pip-notebook-install)
		- [4. notebook에서 사용할 p/w 설정](#4-notebook-pw-)
		- [5. System terminal이 아닌 WebBrowser jupyter terminal을 사용하기 위한 설정](#5-system-terminal-webbrowser-jupyter-terminal-)
		- [6. jupyter가 background에서 실행되도록 설정](#6-jupyter-background-)
		- [7. SSL 접속을 위한 SSL KeyPair 생성](#7-ssl-ssl-keypair-)
		- [8. SSH 접속 가능하도록 `jupyter_notebook_config.py` 환경설정 수정](#8-ssh-jupyternotebookconfigpy-)
		- [9. System 기본 프로그램으로 jupyter가 실행되도록 설정](#9-system-jupyter-) - [실행 상태 확인](#-)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!-- /TOC --&gt;

&lt;ul&gt;
  &lt;li&gt;lecture playlist  : &lt;a href=&quot;https://www.youtube.com/playlist?list=PLRx0vPvlEmdChjc6N3JnLaX-Gihh5pHcx&quot;&gt;Docker 활용 및 배포 자동화 실전 초급&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;lecturer  : 동빈나&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;01-실습용-aws-ec2-인스턴스-생성-및-접속&quot;&gt;01 실습용 AWS EC2 인스턴스 생성 및 접속&lt;/h1&gt;

&lt;h2 id=&quot;aws-서버-인스턴스-생성&quot;&gt;AWS 서버 인스턴스 생성&lt;/h2&gt;

&lt;p&gt;Docker Machine 설치를 위한 객체 생성&lt;/p&gt;

&lt;h4 id=&quot;서버-인스턴스&quot;&gt;서버 인스턴스&lt;/h4&gt;
&lt;dl&gt;
  &lt;dt&gt;EC2&lt;/dt&gt;
  &lt;dd&gt;강의일 현재까지 AWS에서 가장 많이 쓰이고 있는 서버&lt;/dd&gt;
&lt;/dl&gt;

&lt;h4 id=&quot;ami-선택&quot;&gt;AMI 선택&lt;/h4&gt;
&lt;dl&gt;
  &lt;dt&gt;Amazon Machine Image&lt;/dt&gt;
  &lt;dd&gt;Ubuntu Server 18.04 (LTS) 선택&lt;/dd&gt;
  &lt;dd&gt;&lt;img src=&quot;/assets/Screen%20Shot%202020-04-04%20at%2016.53.17.png&quot; alt=&quot;Screen Shot 2020-04-04 at 16.53.17&quot; /&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;h4 id=&quot;인스턴스-유형-선택&quot;&gt;인스턴스 유형 선택&lt;/h4&gt;
&lt;dl&gt;
  &lt;dt&gt;t2 micro&lt;/dt&gt;
  &lt;dd&gt;free-tier 에서 사용 가능한 유일한 type&lt;/dd&gt;
  &lt;dd&gt;&lt;img src=&quot;/assets/Screen%20Shot%202020-04-04%20at%2016.55.55.png&quot; alt=&quot;Screen Shot 2020-04-04 at 16.55.55&quot; /&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;유형 선택 후 시작하기 버튼 누르면 바로 step7으로 넘어감&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ss%20ubuntu%20AMI.png&quot; alt=&quot;ss ubuntu AMI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;처음에 잘못 눌렀는지..AMI를 AmazonLinux로 잘못 선택해서 왜 sudo가 안먹히나 또 헤맸다..&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;key-pair&quot;&gt;Key pair&lt;/h4&gt;
&lt;p&gt;보안을 위한 key pair 생성 및 download&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;별도의 workspace 디렉토리 생성하여 관리&lt;/li&gt;
  &lt;li&gt;파일 속성을 통해 보안 설정 필수&lt;/li&gt;
  &lt;li&gt;linux/Mac &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod 400&lt;/code&gt;를 통해 보안 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;terminal 열어서 SSH 방식으로 연결해야 함&lt;/p&gt;

&lt;p&gt;ex.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; /&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;keypair.pem&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; ubuntu@&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;public DNS&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;!--

chmod 400 /Users/WnJ/Desktop/AWS/docking.pem
ssh -i /Users/WnJ/Desktop/AWS/docking.pem ubuntu@ec2-13-209-21-25.ap-northeast-2.compute.amazonaws.com
ssh -i /Users/WnJ/Desktop/AWS/docking.pem ubuntu@ec2-54-180-30-186.ap-northeast-2.compute.amazonaws.com

ssh -i /Users/WnJ/Desktop/AWS/docking.pem ec2-user@ec2-13-209-21-25.ap-northeast-2.compute.amazonaws.com


--&gt;

&lt;p&gt;&lt;em&gt;aws instance connect 눌렀을 때 나오는 안내 화면에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;예:&lt;/code&gt;에 있는 거 그대로 가져와서 경로만 써주면 됨&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ss%20aws%20connect%20instance.png&quot; alt=&quot;ss aws connect instance&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;error-같은-normal-message&quot;&gt;Error 같은 Normal Message&lt;/h5&gt;
&lt;p&gt;ssh 방식으로 연결 시도하고 나니, 아래처럼 메시지가 떴음&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;can't be established&lt;/code&gt; 라는 메시지 때문에 오류인 줄 알고 헤맸는데, 그냥 yes 하면 연결 되는 거 였음..&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The authenticity of host '###' cant be established.
ECDSA key fingerprint is SHA256:###.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Welcome to Ubuntu..!!&lt;/p&gt;

&lt;p&gt;EC2의 Ubuntu에 접속되어 linux 명령으로 작업하면 된다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to Ubuntu 18.04.3 LTS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;GNU/Linux 4.15.0-1057-aws x86_64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Documentation:  https://help.ubuntu.com
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Management:     https://landscape.canonical.com
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Support:        https://ubuntu.com/advantage

  System information as of Sat Apr  4 10:10:05 UTC 2020

  System load:  0.25              Processes:           91
  Usage of /:   13.6% of 7.69GB   Users logged &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;:     0
  Memory usage: 15%               IP address &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;eth0: 172.31.45.116
  Swap usage:   0%

0 packages can be updated.
0 updates are security updates.

...

~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
/home/ubuntu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;참고&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;SSH 방식 접속 방법  : &lt;a href=&quot;https://lhh3520.tistory.com/288&quot;&gt;lhh3520.tistory.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;SSH Key 만드는 법 : &lt;a href=&quot;https://uroa.tistory.com/101&quot;&gt;uroa.tistory.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;02-jupyter-notebook-설치-https-적용-시스템-서비스-설정하기&quot;&gt;02 Jupyter Notebook 설치, HTTPS 적용, 시스템 서비스 설정하기&lt;/h1&gt;

&lt;h2 id=&quot;보다-편한-ec2-활용을-위한-jupyter-notebook-설치&quot;&gt;보다 편한 EC2 활용을 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Jupyter Notebook&lt;/code&gt; 설치&lt;/h2&gt;

&lt;p&gt;System terminal이 아닌 &lt;code class=&quot;highlighter-rouge&quot;&gt;Jupyter Notebook&lt;/code&gt;의 terminal에서 Server 접속 위함&lt;/p&gt;

&lt;h4 id=&quot;1-check-python3-version&quot;&gt;1. check python3 version&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
Python 3.6.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;2-python3-개발환경-설치위한-pip-install&quot;&gt;2. python3 개발환경 설치위한 pip install&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python3-pip
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following additional packages will be installed:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;3-pip를-통해-notebook-install&quot;&gt;3. pip를 통해 notebook install&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-notebook에서-사용할-pw-설정&quot;&gt;4. notebook에서 사용할 p/w 설정&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;이때 return 되는 sha 값을 반드시 잘 저장해둔다; SSH 만들기 위함!!&lt;/em&gt;&lt;/strong&gt;
```python
~$ python3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Python 3.6.9 (default, Nov  7 2019, 10:44:02)
[GCC 8.3.0] on linux
Type “help”, “copyright”, “credits” or “license” for more information.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;
      &lt;p&gt;from notebook.auth import passwd
passwd()
Enter password:
Verify password:
```&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;5-system-terminal이-아닌-webbrowser-jupyter-terminal을-사용하기-위한-설정&quot;&gt;5. System terminal이 아닌 WebBrowser jupyter terminal을 사용하기 위한 설정&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jupyter notebook &lt;span class=&quot;nt&quot;&gt;--generate-config&lt;/span&gt;
Writing default config to: /home/ubuntu/.jupyter/jupyter_notebook_config.py

~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /home/ubuntu/.jupyter/jupyter_notebook_config.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter_notebook_config.py&lt;/code&gt; 파일이 열림, 최하단에 아래 내용 입력&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotebookApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'sha1:7134d8d88d92:6e362dcebe594cc7e3eb809e2936c089ba22cd42'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotebookApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'172.31.45.116'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotebookApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;notebook_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotebookApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;certfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'/home/ubuntu/ssl/gitgit.pem'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotebookApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'/home/ubuntu/ssl/gitgit.key'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~$ sudo jupyter-notebook --allow-root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;아래와 같이 ip주소가 뜨면 성공&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 10:21:59.278 NotebookApp] The Jupyter Notebook is running at:
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 10:21:59.278 NotebookApp] http://xxx.xxx.xxx.xxx:8888/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ip주소로 접속 -&amp;gt; jupyter pw 입력 -&amp;gt; New Terminal&lt;/p&gt;

&lt;h4 id=&quot;6-jupyter가-background에서-실행되도록-설정&quot;&gt;6. jupyter가 background에서 실행되도록 설정&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bg&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1]+ &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;jupyter-notebook &lt;span class=&quot;nt&quot;&gt;--allow-root&lt;/span&gt; &amp;amp;
~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;disown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;보안을 위해 접속ip 확인 및 ip kill&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; 
tcp        0      0 @@@.@@@.@@@.@@@:8888      0.0.0.0:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;               LISTEN      7410/python3        
tcp        0      0 @@@.@@@.@@@.@@@:8888      @@@.@@@.@@@.@@@:63856   ESTABLISHED 7410/python3        
...

~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-9&lt;/span&gt; 7410
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1]+  Killed                  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;jupyter-notebook &lt;span class=&quot;nt&quot;&gt;--allow-root&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;7-ssl-접속을-위한-ssl-keypair-생성&quot;&gt;7. SSL 접속을 위한 SSL KeyPair 생성&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;ssl
~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ssl
~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;openssl req &lt;span class=&quot;nt&quot;&gt;-x509&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-nodes&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-days&lt;/span&gt; 365 &lt;span class=&quot;nt&quot;&gt;-newkey&lt;/span&gt; rsa:1024 &lt;span class=&quot;nt&quot;&gt;-keyout&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{OpenKeyName}.key&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{PrivateKeyName}.pem&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-batch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sudo openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout “gitgit.key” -out “gitgit.pem” -batch&lt;/p&gt;

&lt;h4 id=&quot;8-ssh-접속-가능하도록-jupyter_notebook_configpy-환경설정-수정&quot;&gt;8. SSH 접속 가능하도록 &lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter_notebook_config.py&lt;/code&gt; 환경설정 수정&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /home/ubuntu/.jupyter/jupyter_notebook_config.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;9-system-기본-프로그램으로-jupyter가-실행되도록-설정&quot;&gt;9. System 기본 프로그램으로 jupyter가 실행되도록 설정&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;which jupyter-notebook
/usr/local/bin/jupyter-notebook

~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/systemd/system/jupyter.service

~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;jupyter
Created symlink /etc/systemd/system/multi-user.target.wants/jupyter.service → /etc/systemd/system/jupyter.service.

~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start jupyter

&lt;span class=&quot;c&quot;&gt;# 실행 상태 확인&lt;/span&gt;
~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl status jupyter
● jupyter.service - Jupyter Notebook Server
   Loaded: loaded &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/etc/systemd/system/jupyter.service&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; enabled&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; vendor preset:
   Active: active &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;running&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; since Sat 2020-04-04 10:56:44 UTC&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 9s ago
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;접속 시 &lt;code class=&quot;highlighter-rouge&quot;&gt;신뢰할 수 없는 인증서&lt;/code&gt; 문제가 발생하나, 무시하고 진행하면 됨&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;사설인증서 SSL을 사용하기 때문&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;희한하게 내 Mac-Chrome에서는 무시하고 진행 메뉴가 안보이고 인증서 따로 저장하는 메뉴도 없음.. 그냥 꽉~막힘 ㅠ googling해도 깔끔한 해결방법은 찾기 힘들었는데, FireFox로 여니까 된다..내 금쪽 같은 토요일 2시간 뚝딱!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>gitgitWi</name></author><category term="Docker" /><category term="LectureNotes" /><category term="AWS" /><category term="동빈나" /><summary type="html"></summary></entry><entry><title type="html">왕초보도 따라하는 도커 기초 강의 by 재즐보프 youtube</title><link href="http://localhost:4000/study/docker/docker-basic-01/" rel="alternate" type="text/html" title="왕초보도 따라하는 도커 기초 강의 by 재즐보프 youtube" /><published>2020-04-04T00:00:00+09:00</published><updated>2020-04-04T00:00:00+09:00</updated><id>http://localhost:4000/study/docker/docker-basic-01</id><content type="html" xml:base="http://localhost:4000/study/docker/docker-basic-01/">&lt;h1 id=&quot;docker-basic-by-재즐보프s-youtube&quot;&gt;Docker basic by 재즐보프’s Youtube&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.notion.so/b67ed727aea4467cbc3226bb0c8e8336&quot;&gt;왕초보도 따라하는 도커 기초 강의 lecture notes&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;install-apps-in-docker&quot;&gt;Install Apps in Docker&lt;/h2&gt;

&lt;p&gt;in Terminal&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;base&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JnWui-MacBook-Pro:~ WnJ&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;

JnWui-MacBook-Pro:~ root# docker search tomcat9

&lt;span class=&quot;c&quot;&gt;# 검색 결과로 나온 tomcat9 관련 이미지 중 원하는 것을 찾아&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# docker에서 8080 포트로 바로 실행&lt;/span&gt;

JnWui-MacBook-Pro:~ root# docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8080:8080 &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; tc ykaj9758/tomcat9


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; : 처음 설치시에만 run 명령어 사용, 이후부터는 &lt;code class=&quot;highlighter-rouge&quot;&gt;start &lt;/code&gt; 명령어로 tomcat 사용 가능&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; : background 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;127.0.0.1:8080d 에서 tomcat 9 실행 확인&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;JnWui-MacBook-Pro:~ root#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker ps
&lt;span class=&quot;go&quot;&gt;
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;38ca9cccee3e        ykaj9758/tomcat9    &quot;/opt/tomcat/apache-…&quot;   8 minutes ago       Up 8 minutes        0.0.0.0:8080-&amp;gt;&lt;/span&gt;8080/tcp   tc
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;현재 실행 중인 컨테이너 확인&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;JnWui-MacBook-Pro:~ root#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker stop tc
&lt;span class=&quot;go&quot;&gt;
tc
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;JnWui-MacBook-Pro:~ root#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker ps
&lt;span class=&quot;go&quot;&gt;CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실행중인 프로그램 stop&lt;/p&gt;

&lt;h2 id=&quot;docker-registry&quot;&gt;Docker Registry&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://hub.docker.com&quot;&gt;docker hub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이미지만 다운받고 싶은 경우&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
docker pull [ image name ]

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치한 이미지 확인&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;JnWui-MacBook-Pro:~ root#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker images
&lt;span class=&quot;go&quot;&gt;
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ykaj9758/tomcat9    latest              4fe6b09b4e59        23 months ago       1.16GB

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-lifecycle&quot;&gt;Docker Lifecycle&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c&quot;&gt;# nginx 이미지 가져오기&lt;/span&gt;

bash-3.2# docker pull nginx

Using default tag: latest
latest: Pulling from library/nginx
c499e6d256d6: Pull &lt;span class=&quot;nb&quot;&gt;complete
&lt;/span&gt;74cda408e262: Pull &lt;span class=&quot;nb&quot;&gt;complete
&lt;/span&gt;ffadbd415ab7: Pull &lt;span class=&quot;nb&quot;&gt;complete
&lt;/span&gt;Digest: sha256:282530fcb7cd19f3848c7b611043f82ae4be3781cb00105a1d593d7e6286b596
Status: Downloaded newer image &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;nginx:latest
docker.io/library/nginx:latest

&lt;span class=&quot;c&quot;&gt;# nginx를 nx라는 이름 지정하여 port 80번에 할당, 컨테이너 생성&lt;/span&gt;

bash-3.2# docker create &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 80:80 &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; nx nginx

&lt;span class=&quot;c&quot;&gt;# 현재 실행중인 모든 컨테이너 조회&lt;/span&gt;

bash-3.2# docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;


bash-3.2# docker start 3b46b4a158d7


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 내용은 아래 한줄로도 가능&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 80:80 &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; nx2 nginx

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker stop nx2

bash-3.2# docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;

CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS                          PORTS               NAMES
a1d0718587fc        nginx               &lt;span class=&quot;s2&quot;&gt;&quot;nginx -g 'daemon of…&quot;&lt;/span&gt;   About a minute ago   Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 13 seconds ago                           nx2
3b46b4a158d7        nginx               &lt;span class=&quot;s2&quot;&gt;&quot;nginx -g 'daemon of…&quot;&lt;/span&gt;   6 minutes ago        Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; About a minute ago                       nx
38ca9cccee3e        ykaj9758/tomcat9    &lt;span class=&quot;s2&quot;&gt;&quot;/opt/tomcat/apache-…&quot;&lt;/span&gt;   57 minutes ago       Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;143&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 47 minutes ago                         tc


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;3b46b4a158d7

3b46b4a158d7

bash-3.2# docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;

CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                        PORTS               NAMES
a1d0718587fc        nginx               &lt;span class=&quot;s2&quot;&gt;&quot;nginx -g 'daemon of…&quot;&lt;/span&gt;   2 minutes ago       Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 57 seconds ago                         nx2
38ca9cccee3e        ykaj9758/tomcat9    &lt;span class=&quot;s2&quot;&gt;&quot;/opt/tomcat/apache-…&quot;&lt;/span&gt;   58 minutes ago      Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;143&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 48 minutes ago                       tc


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker stop nx

nx

bash-3.2# docker start nx

nx

bash-3.2# docker restart nx

nx

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker stop nx

nx

bash-3.2# docker rmi nx

bash-3.2# docker rmi nginx

Untagged: nginx:latest
Untagged: nginx@sha256:282530fcb7cd19f3848c7b611043f82ae4be3781cb00105a1d593d7e6286b596
Deleted: sha256:ed21b7a8aee9cc677df6d7f38a641fa0e3c05f65592c592c9f28c42b3dd89291
Deleted: sha256:8a305f371a6c3c445a1dfc500c1364743868a269ab8cdaf95902692e82168352
Deleted: sha256:d079ef06ec1f10a8050887365f9a940b39547ba6bcc46b16a463e740984f3223
Deleted: sha256:c3a984abe8a88059915bb6c7a1d249fd1ccc16d931334ac8816540b0eb686b45


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;layers&quot;&gt;Layers&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;containers -&amp;gt; image -&amp;gt; overlay2&lt;/li&gt;
  &lt;li&gt;overlay2 로 갈수록 용량이 급격히 커짐, 컨테이너 대부분의 정보를 overlay2가 갖고 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;useful-commands&quot;&gt;Useful Commands&lt;/h2&gt;

&lt;p&gt;execute inner container terminal&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-it&lt;/code&gt; : input &amp;amp; terminal&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; tc /bin/bash

&lt;span class=&quot;c&quot;&gt;# terminal이 tomcat의 hostname/containerID 로 열림&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tomcat@38ca9cccee3e /]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;anaconda-post.log  bin  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tomcat@38ca9cccee3e /]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit
exit

&lt;/span&gt;bash-3.2#


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;logs {container name}&lt;/code&gt; print console output log&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker logs tc

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cp {path1} {path2}&lt;/code&gt; : copy a file from path1 to path2&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;filename&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

bash-3.2# &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;filename&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-q&lt;/code&gt; : 현재 containers id 값만 조회&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;`  `&lt;/code&gt; : ` ` 안의 명령에 대한 결과값을 return&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;
38ca9cccee3e

&lt;span class=&quot;c&quot;&gt;# containers id 값을 모두 가져와서 stop&lt;/span&gt;
bash-3.2# docker stop &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
38ca9cccee3e


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ways to stop &amp;amp; remove all of containers &amp;amp; images&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker stop &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker rmi &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker images &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;temporary-container&quot;&gt;temporary container&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;과 함께 &lt;code class=&quot;highlighter-rouge&quot;&gt;--rm&lt;/code&gt; 명령, container stop 과 함께 자동으로 삭제됨&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; tctemp &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8090:8090 &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; ykaj9758/tomcat9
2a45b3053e169292aefb0a050283b0fe8589b6b275e18f326dc3f87de4ffe6f0

bash-3.2# docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS                       PORTS                              NAMES
2a45b3053e16        ykaj9758/tomcat9    &lt;span class=&quot;s2&quot;&gt;&quot;/opt/tomcat/apache-…&quot;&lt;/span&gt;   About a minute ago   Up 59 seconds                8080/tcp, 0.0.0.0:8090-&amp;gt;8090/tcp   tctemp
38ca9cccee3e        ykaj9758/tomcat9    &lt;span class=&quot;s2&quot;&gt;&quot;/opt/tomcat/apache-…&quot;&lt;/span&gt;   2 hours ago          Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;143&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 7 minutes ago                                      tc

bash-3.2# docker stop tctemp
tctemp

bash-3.2# docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                       PORTS               NAMES
38ca9cccee3e        ykaj9758/tomcat9    &lt;span class=&quot;s2&quot;&gt;&quot;/opt/tomcat/apache-…&quot;&lt;/span&gt;   2 hours ago         Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;143&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 8 minutes ago                       tc


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;mysql-설치--실행&quot;&gt;MySQL 설치 &amp;amp; 실행&lt;/h2&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-e &lt;/code&gt; : 환경변수설정
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MYSQL_ROOT_PASSWORD=&lt;/code&gt; : 반드시 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; : 최신버전 설치
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql:5&lt;/code&gt; : mysql5 설치&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; mymysql &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1234 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; mysql

&lt;span class=&quot;c&quot;&gt;# bash-3.2# docker run --name mymysql5 -e MYSQL_ROOT_PASSWORD=1234 -d mysql:5.7&lt;/span&gt;

Unable to find image &lt;span class=&quot;s1&quot;&gt;'mysql:latest'&lt;/span&gt; locally
latest: Pulling from library/mysql

&lt;span class=&quot;c&quot;&gt;# ps 명령으로 설치 됐는지 확인, name / port 확인&lt;/span&gt;
bash-3.2# docker ps

CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                 NAMES
7001e556ecd4        mysql               &lt;span class=&quot;s2&quot;&gt;&quot;docker-entrypoint.s…&quot;&lt;/span&gt;   3 minutes ago       Up 3 minutes        3306/tcp, 33060/tcp   mymysql


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;exectute&quot;&gt;Exectute&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bash-3.2# docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; mymysql mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# MySQL 접속 화면&lt;/span&gt;
Enter password:

Welcome to the MySQL monitor.  Commands end with &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; or &lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Your MySQL connection &lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;is 8
Server version: 8.0.19 MySQL Community Server - GPL

Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2000, 2020, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &lt;span class=&quot;s1&quot;&gt;'help;'&lt;/span&gt; or &lt;span class=&quot;s1&quot;&gt;'\h'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;help. Type &lt;span class=&quot;s1&quot;&gt;'\c'&lt;/span&gt; to clear the current input statement.

mysql&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;oracle-xe-11g&quot;&gt;Oracle XE 11g&lt;/h2&gt;

&lt;h3 id=&quot;installation-1&quot;&gt;Installation&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash-3.2# docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 49161:1521 oracleinanutshell/oracle-xe-11g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>gitgitWi</name></author><category term="Docker" /><category term="LectureNotes" /><category term="Oracle" /><category term="MySQL" /><summary type="html">Docker basic by 재즐보프’s Youtube</summary></entry><entry><title type="html">LN-Docker-동빈나’s Docker 활용 1강~2강</title><link href="http://localhost:4000/study/aws/ln-aws-0102/" rel="alternate" type="text/html" title="LN-Docker-동빈나's Docker 활용 1강~2강" /><published>2020-04-04T00:00:00+09:00</published><updated>2020-04-04T00:00:00+09:00</updated><id>http://localhost:4000/study/aws/ln-aws-0102</id><content type="html" xml:base="http://localhost:4000/study/aws/ln-aws-0102/">&lt;h1 id=&quot;01-실습용-aws-ec2-인스턴스-생성-및-접속&quot;&gt;01 실습용 AWS EC2 인스턴스 생성 및 접속&lt;/h1&gt;

&lt;h2 id=&quot;aws-서버-인스턴스-생성&quot;&gt;AWS 서버 인스턴스 생성&lt;/h2&gt;

&lt;p&gt;Docker Machine 설치를 위한 객체 생성&lt;/p&gt;

&lt;h4 id=&quot;서버-인스턴스&quot;&gt;서버 인스턴스&lt;/h4&gt;
&lt;dl&gt;
  &lt;dt&gt;EC2&lt;/dt&gt;
  &lt;dd&gt;강의일 현재까지 AWS에서 가장 많이 쓰이고 있는 서버&lt;/dd&gt;
&lt;/dl&gt;

&lt;h4 id=&quot;ami-선택&quot;&gt;AMI 선택&lt;/h4&gt;
&lt;dl&gt;
  &lt;dt&gt;Amazon Machine Image&lt;/dt&gt;
  &lt;dd&gt;Ubuntu Server 18.04 (LTS) 선택&lt;/dd&gt;
  &lt;dd&gt;&lt;img src=&quot;/assets/images/aws/Screen Shot 2020-04-04 at 16.53.17.png&quot; alt=&quot;Screen Shot 2020-04-04 at 16.53.17&quot; /&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;h4 id=&quot;인스턴스-유형-선택&quot;&gt;인스턴스 유형 선택&lt;/h4&gt;
&lt;dl&gt;
  &lt;dt&gt;t2 micro&lt;/dt&gt;
  &lt;dd&gt;free-tier 에서 사용 가능한 유일한 type&lt;/dd&gt;
  &lt;dd&gt;&lt;img src=&quot;/assets/images/aws/Screen%20Shot%202020-04-04%20at%2016.55.55.png&quot; alt=&quot;Screen Shot 2020-04-04 at 16.55.55&quot; /&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;유형 선택 후 시작하기 버튼 누르면 바로 step7으로 넘어감&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws/ss%20ubuntu%20AMI.png&quot; alt=&quot;ss ubuntu AMI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;처음에 잘못 눌렀는지..AMI를 AmazonLinux로 잘못 선택해서 왜 sudo가 안먹히나 또 헤맸다..&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;key-pair&quot;&gt;Key pair&lt;/h4&gt;
&lt;p&gt;보안을 위한 key pair 생성 및 download&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;별도의 workspace 디렉토리 생성하여 관리&lt;/li&gt;
  &lt;li&gt;파일 속성을 통해 보안 설정 필수&lt;/li&gt;
  &lt;li&gt;linux/Mac &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod 400&lt;/code&gt;를 통해 보안 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;terminal 열어서 SSH 방식으로 연결해야 함&lt;/p&gt;

&lt;p&gt;ex.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; /&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;keypair.pem&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; ubuntu@&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;public DNS&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;aws instance connect 눌렀을 때 나오는 안내 화면에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;예:&lt;/code&gt;에 있는 거 그대로 가져와서 경로만 써주면 됨&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/ss%20aws%20connect%20instance.png&quot; alt=&quot;ss aws connect instance&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;error-같은-normal-message&quot;&gt;Error 같은 Normal Message&lt;/h5&gt;
&lt;p&gt;ssh 방식으로 연결 시도하고 나니, 아래처럼 메시지가 떴음&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;can't be established&lt;/code&gt; 라는 메시지 때문에 오류인 줄 알고 헤맸는데, 그냥 yes 하면 연결 되는 거 였음..&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The authenticity of host '###' cant be established.
ECDSA key fingerprint is SHA256:###.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Welcome to Ubuntu..!!&lt;/p&gt;

&lt;p&gt;EC2의 Ubuntu에 접속되어 linux 명령으로 작업하면 된다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to Ubuntu 18.04.3 LTS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;GNU/Linux 4.15.0-1057-aws x86_64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Documentation:  https://help.ubuntu.com
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Management:     https://landscape.canonical.com
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Support:        https://ubuntu.com/advantage

  System information as of Sat Apr  4 10:10:05 UTC 2020

  System load:  0.25              Processes:           91
  Usage of /:   13.6% of 7.69GB   Users logged &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;:     0
  Memory usage: 15%               IP address &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;eth0: 172.31.45.116
  Swap usage:   0%

0 packages can be updated.
0 updates are security updates.

...

~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
/home/ubuntu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;참고&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;SSH 방식 접속 방법  : &lt;a href=&quot;https://lhh3520.tistory.com/288&quot;&gt;lhh3520.tistory.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;SSH Key 만드는 법 : &lt;a href=&quot;https://uroa.tistory.com/101&quot;&gt;uroa.tistory.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;02-jupyter-notebook-설치-https-적용-시스템-서비스-설정하기&quot;&gt;02 Jupyter Notebook 설치, HTTPS 적용, 시스템 서비스 설정하기&lt;/h1&gt;

&lt;h2 id=&quot;보다-편한-ec2-활용을-위한-jupyter-notebook-설치&quot;&gt;보다 편한 EC2 활용을 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Jupyter Notebook&lt;/code&gt; 설치&lt;/h2&gt;

&lt;p&gt;System terminal이 아닌 &lt;code class=&quot;highlighter-rouge&quot;&gt;Jupyter Notebook&lt;/code&gt;의 terminal에서 Server 접속 위함&lt;/p&gt;

&lt;h4 id=&quot;1-check-python3-version&quot;&gt;1. check python3 version&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
Python 3.6.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;2-python3-개발환경-설치위한-pip-install&quot;&gt;2. python3 개발환경 설치위한 pip install&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python3-pip
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following additional packages will be installed:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;3-pip를-통해-notebook-install&quot;&gt;3. pip를 통해 notebook install&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-notebook에서-사용할-pw-설정&quot;&gt;4. notebook에서 사용할 p/w 설정&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;이때 return 되는 sha 값을 반드시 잘 저장해둔다; SSH 만들기 위함!!&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;python3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Python&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6.9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Nov&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GCC&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.3.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linux&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;help&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;copyright&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;credits&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;license&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;notebook.auth&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwd&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;passwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Enter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Verify&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;5-system-terminal이-아닌-webbrowser-jupyter-terminal을-사용하기-위한-설정&quot;&gt;5. System terminal이 아닌 WebBrowser jupyter terminal을 사용하기 위한 설정&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jupyter notebook &lt;span class=&quot;nt&quot;&gt;--generate-config&lt;/span&gt;
Writing default config to: /home/ubuntu/.jupyter/jupyter_notebook_config.py

~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /home/ubuntu/.jupyter/jupyter_notebook_config.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter_notebook_config.py&lt;/code&gt; 파일이 열림, 최하단에 아래 내용 입력&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotebookApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'sha1:~~~~'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotebookApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'@@@.@@@.@@@.@@@'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotebookApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;notebook_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotebookApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;certfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'/home/ubuntu/ssl/@@@.pem'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotebookApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'/home/ubuntu/ssl/@@@.key'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~$ sudo jupyter-notebook --allow-root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;아래와 같이 ip주소가 뜨면 성공&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 10:21:59.278 NotebookApp] The Jupyter Notebook is running at:
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 10:21:59.278 NotebookApp] http://xxx.xxx.xxx.xxx:8888/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ip주소로 접속 -&amp;gt; jupyter pw 입력 -&amp;gt; New Terminal&lt;/p&gt;

&lt;h4 id=&quot;6-jupyter가-background에서-실행되도록-설정&quot;&gt;6. jupyter가 background에서 실행되도록 설정&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bg&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1]+ &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;jupyter-notebook &lt;span class=&quot;nt&quot;&gt;--allow-root&lt;/span&gt; &amp;amp;
~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;disown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;보안을 위해 접속ip 확인 및 ip kill&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; 
tcp        0      0 @@@.@@@.@@@.@@@:8888      0.0.0.0:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;               LISTEN      7410/python3        
tcp        0      0 @@@.@@@.@@@.@@@:8888      @@@.@@@.@@@.@@@:63856   ESTABLISHED 7410/python3        
...

~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-9&lt;/span&gt; 7410
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1]+  Killed                  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;jupyter-notebook &lt;span class=&quot;nt&quot;&gt;--allow-root&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;7-ssl-접속을-위한-ssl-keypair-생성&quot;&gt;7. SSL 접속을 위한 SSL KeyPair 생성&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;ssl
~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ssl
~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;openssl req &lt;span class=&quot;nt&quot;&gt;-x509&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-nodes&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-days&lt;/span&gt; 365 &lt;span class=&quot;nt&quot;&gt;-newkey&lt;/span&gt; rsa:1024 &lt;span class=&quot;nt&quot;&gt;-keyout&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{OpenKeyName}.key&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{PrivateKeyName}.pem&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-batch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;8-ssh-접속-가능하도록-jupyter_notebook_configpy-환경설정-수정&quot;&gt;8. SSH 접속 가능하도록 &lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter_notebook_config.py&lt;/code&gt; 환경설정 수정&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /home/ubuntu/.jupyter/jupyter_notebook_config.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;9-system-기본-프로그램으로-jupyter가-실행되도록-설정&quot;&gt;9. System 기본 프로그램으로 jupyter가 실행되도록 설정&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;which jupyter-notebook
/usr/local/bin/jupyter-notebook

~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/systemd/system/jupyter.service

~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;jupyter
Created symlink /etc/systemd/system/multi-user.target.wants/jupyter.service → /etc/systemd/system/jupyter.service.

~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start jupyter

&lt;span class=&quot;c&quot;&gt;# 실행 상태 확인&lt;/span&gt;
~/ssl&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl status jupyter
● jupyter.service - Jupyter Notebook Server
   Loaded: loaded &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/etc/systemd/system/jupyter.service&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; enabled&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; vendor preset:
   Active: active &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;running&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; since Sat 2020-04-04 10:56:44 UTC&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 9s ago
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;접속 시 &lt;code class=&quot;highlighter-rouge&quot;&gt;신뢰할 수 없는 인증서&lt;/code&gt; 문제가 발생하나, 무시하고 진행하면 됨&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;사설인증서 SSL을 사용하기 때문&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;희한하게 내 Mac-Chrome에서는 무시하고 진행 메뉴가 안보이고 인증서 따로 저장하는 메뉴도 없음.. 그냥 꽉~막힘 ㅠ googling해도 깔끔한 해결방법은 찾기 힘들었는데, FireFox로 여니까 된다..내 금쪽 같은 토요일 2시간 뚝딱!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>gitgitWi</name></author><category term="Docker" /><category term="LectureNotes" /><category term="AWS" /><category term="동빈나" /><summary type="html">01 실습용 AWS EC2 인스턴스 생성 및 접속</summary></entry><entry><title type="html">LN-Docker-동빈나’s Docker 활용 3강~4강</title><link href="http://localhost:4000/study/aws/docker/ln-aws-0304/" rel="alternate" type="text/html" title="LN-Docker-동빈나's Docker 활용 3강~4강" /><published>2020-04-04T00:00:00+09:00</published><updated>2020-04-04T00:00:00+09:00</updated><id>http://localhost:4000/study/aws/docker/ln-aws-0304</id><content type="html" xml:base="http://localhost:4000/study/aws/docker/ln-aws-0304/">&lt;h1 id=&quot;03-aws-ec2에-도커docker-설치-및-dockerfile로-웹-서버-구동시키기&quot;&gt;03 AWS EC2에 도커(Docker) 설치 및 Dockerfile로 웹 서버 구동시키기&lt;/h1&gt;

&lt;h2 id=&quot;docker-설치를-위한-준비&quot;&gt;Docker 설치를 위한 준비&lt;/h2&gt;

&lt;h4 id=&quot;aws에서-생성한-jupyter-notebook-접속&quot;&gt;AWS에서 생성한 jupyter-notebook 접속&lt;/h4&gt;

&lt;p&gt;현재 메모리 상황 확인&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
Filesystem      Size  Used Avail Use% Mounted on
udev            481M     0  481M   0% /dev
tmpfs            99M  752K   98M   1% /run
/dev/xvda1      7.7G  1.7G  6.1G  22% /
tmpfs           492M     0  492M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           492M     0  492M   0% /sys/fs/cgroup
/dev/loop0       90M   90M     0 100% /snap/core/8268
/dev/loop1       18M   18M     0 100% /snap/amazon-ssm-agent/1480
tmpfs            99M     0   99M   0% /run/user/1000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;필요한-프로그램-설치&quot;&gt;필요한 프로그램 설치&lt;/h4&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;apt-transport-https
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ca-certificates
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;curl
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;software-properties-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;curl-을-통해-stable-version-docker-for-linux-설치&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt; 을 통해 stable version &lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt; for linux 설치&lt;/h4&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fssL&lt;/span&gt; https://download.docker.com/linux/ubuntu/gpg | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-key add -
&lt;span class=&quot;go&quot;&gt;OK

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;Docker를 download할 경로 설정
&lt;span class=&quot;gp&quot;&gt;:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;add-apt-repository &lt;span class=&quot;s2&quot;&gt;&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable&quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;Docker-ce version check
&lt;span class=&quot;go&quot;&gt;apt-cache policy docker-ce

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;Docker-ce download
&lt;span class=&quot;go&quot;&gt;sudo apt install docker-ce

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;system status 확인으로 정상설치 및 실행 여부 확인
&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl status docker
&lt;span class=&quot;go&quot;&gt;● docker.service - Docker Application Container Engine
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;   Loaded: loaded (/lib/systemd/system/docker.service;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;enabled&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; vendor preset: enabled&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;   Active: active (running) since Sat 2020-04-04 13:25:00 UTC;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;24s ago
&lt;span class=&quot;go&quot;&gt;     Docs: https://docs.docker.com
 Main PID: 9562 (dockerd)
    Tasks: 8
   CGroup: /system.slice/docker.service
           └─9562 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-image-다루기&quot;&gt;Docker Image 다루기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;test용 image &lt;code class=&quot;highlighter-rouge&quot;&gt;hello-world&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@ip-@@@@:/# docker pull hello-world
Using default tag: latest
latest: Pulling from library/hello-world
1b930d010525: Pull complete
Digest: sha256:f9dfddf63636d84ef479d645ab5885156ae030f611a56f3a7ac7f2fdd86d7e4e
Status: Downloaded newer image for hello-world:latest
docker.io/library/hello-world:latest

root@ip-@@@@:/# docker run hello-world

root@ip-@@@@:/# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS    PORTS               NAMES
e7cf415feb6d        hello-world         &quot;/hello&quot;            42 seconds ago      Exited (0) 41 seconds ago                       serene_brahmagupta

root@ip-@@@@:/# docker rm e7cf415feb6d
e7cf415feb6d

root@ip-@@@@:/# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
hello-world         latest              fce289e99eb9        15 months ago       1.84kB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;rm 명령으로 Container 삭제하더라도 image 는 그대로 남아있음&lt;/p&gt;

&lt;h2 id=&quot;새로운-image-dockerfile-생성하여-실행&quot;&gt;새로운 image Dockerfile 생성하여 실행&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@ip-@@@@:~# pwd
/home/ubuntu

root@ip-@@@@:~# mkdir example

root@ip-@@@@:~# cd example

root@ip-@@@@:~/example# sudo vi Dockerfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;dockerfile-생성&quot;&gt;Dockerfile 생성&lt;/h4&gt;

&lt;div class=&quot;language-docker highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ubuntu:18.04&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;MAINTAINER&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; gitgitwi &amp;lt;johnwi@knou.ac.kr&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apt-get update
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; apache2

&lt;span class=&quot;k&quot;&gt;EXPOSE&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 80&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [&quot;apachectl&quot;, &quot;-D&quot;, &quot;FOREGROUND&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt; : set OS&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MAINTAINER&lt;/code&gt; : information about author&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RUN&lt;/code&gt; : image를 run할 때 수행할 명령
    &lt;ul&gt;
      &lt;li&gt;여기서는 update &amp;gt; apache2 server 설치&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-y&lt;/code&gt; : 설치시 yes로 답변하도록&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EXPOSE&lt;/code&gt; : 사용할 port 설정
    &lt;ul&gt;
      &lt;li&gt;80 port 는 apache2의 기본 HTTP port&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CMD&lt;/code&gt; : 사용할 명령 설정
    &lt;ul&gt;
      &lt;li&gt;여기서 apache2가 항상 수행될 수 있도록 설정 (daemon 상태로 설정)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt;로 Dockerfile 생성 확인&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:~/example#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Dockerfile
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;dockerfile-실행&quot;&gt;Dockerfile 실행&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt; : tag, 이름 지정
    &lt;ul&gt;
      &lt;li&gt;여기서 example 로 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; : directory&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:~/example#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker build &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; example &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Sending build context to Docker daemon  2.048kB
Step 1/6 : FROM ubuntu:18.04
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;Successfully built 36e373ec3b52
Successfully tagged example:latest
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;설치된-images-확인-tag-name-으로-실행&quot;&gt;설치된 images 확인, tag name 으로 실행&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;ubuntu 18.04에서 실행되도록 지정하면서, ubuntu도 설치됨&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-p {container port} : {EC2 port} &lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;container에서의 80 port를 AWS EC2의 80 port와 맞춤&lt;/li&gt;
      &lt;li&gt;EC2 인스턴스 보안그룹 설정에서 http port를 만들어줘야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:~/example#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker images
&lt;span class=&quot;go&quot;&gt;REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
example             latest              36e373ec3b52        6 seconds ago       189MB
ubuntu              18.04               4e5021d210f6        2 weeks ago         64.2MB
hello-world         latest              fce289e99eb9        15 months ago       1.84kB

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:~/example#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 80:80 example
&lt;span class=&quot;go&quot;&gt;AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.17.0.2. Set the 'ServerName' directive globally to suppress this message
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;apache2-webserver-접속&quot;&gt;Apache2 WebServer 접속&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://{EC2 ip}:80&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt; 가 아닌 &lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt; 로 접속에 주의!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/docker-apache.png&quot; alt=&quot;docker-apache.png&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;04-도커docker-이미지로-apache-및-php-개발환경-구축하기&quot;&gt;04 도커(Docker) 이미지로 Apache 및 PHP 개발환경 구축하기&lt;/h1&gt;

&lt;h4 id=&quot;현재-열려있는-모든-port-강제종료&quot;&gt;현재 열려있는 모든 port 강제종료&lt;/h4&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS  PORTS                NAMES
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;90f277814d0d        example             &quot;apachectl -D FOREGR…&quot;   31 minutes ago      Up 31 minutes  0.0.0.0:80-&amp;gt;&lt;/span&gt;80/tcp   reverent_benz
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;90f277814d0d
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;dockerfile-수정하여-php-설치&quot;&gt;Dockerfile 수정하여 PHP 설치&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;실습을 위해 일부러 PHP 5.6 설치함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;프로그램 설치 중 option 을 선택하게 하는 경우가 종종 있음&lt;/p&gt;

&lt;p&gt;그런데 dockerfile 활용한 설치 중에는 입력 불가&lt;/p&gt;

&lt;p&gt;따라서 Dockerfile에서 미리 interaction 방지를 위한 환경변수 설정을 해줘야 함&lt;/p&gt;

&lt;div class=&quot;language-docker highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; DEBIAN_FRONTEND=noninteractive&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; software-properties-common
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;add-apt-repository ppa:ondrej/php
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apt-get update
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; php5.6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;불필요한 image 제거&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:~/example#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker images
&lt;span class=&quot;go&quot;&gt;REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
example             latest              4c1f2c09a2a6        9 seconds ago       256MB
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;lt;none&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;              &lt;/span&gt;&amp;lt;none&amp;gt;              36e373ec3b52        46 minutes ago      189MB
&lt;span class=&quot;go&quot;&gt;ubuntu              18.04               4e5021d210f6        2 weeks ago         64.2MB
hello-world         latest              fce289e99eb9        15 months ago       1.84kB

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:~/example#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker rmi 36e373ec3b52
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;php-기본-port-접속&quot;&gt;PHP 기본 port 접속&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/html&lt;/code&gt; : PHP 기본 port&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:~/example#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 80:80 &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /home/ubuntu/example/html:/var/www/html example
&lt;span class=&quot;go&quot;&gt;AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.17.0.2. Set the 'ServerName' directive globally to suppress this message
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;jupyter에서 새로 terminal 열어서 PHP 폴더에서 작업&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/apache-php1.png&quot; alt=&quot;php init&quot; /&gt;
PHP가 연결된 모습&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/ubuntu/example/html
&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:~/example/html#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@:~/example/html#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi index.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;test를 위해 index.php에 phpinfo 함수 입력&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;phpinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/apache-php2.png&quot; alt=&quot;apache-php2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 접속하면 위와 같이 phpinfo가 나오는 화면으로 바뀜&lt;/p&gt;</content><author><name>gitgitWi</name></author><category term="Docker" /><category term="LectureNotes" /><category term="AWS" /><category term="동빈나" /><category term="Apache Server" /><summary type="html">03 AWS EC2에 도커(Docker) 설치 및 Dockerfile로 웹 서버 구동시키기</summary></entry><entry><title type="html">LN-Docker-동빈나’s Docker 활용 5강~6강</title><link href="http://localhost:4000/study/aws/docker/ln-aws-0506/" rel="alternate" type="text/html" title="LN-Docker-동빈나's Docker 활용 5강~6강" /><published>2020-04-04T00:00:00+09:00</published><updated>2020-04-04T00:00:00+09:00</updated><id>http://localhost:4000/study/aws/docker/ln-aws-0506</id><content type="html" xml:base="http://localhost:4000/study/aws/docker/ln-aws-0506/">&lt;h1 id=&quot;05-docker로-mysql-컨테이너-만들어-보기&quot;&gt;05 Docker로 MySQL 컨테이너 만들어 보기&lt;/h1&gt;

&lt;p&gt;작업 전 모든 container 제거&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;0037b1e5d4eb

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;mysql56-설치&quot;&gt;MySQL5.6 설치&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;host 9876 port와 MySQL 3306 port 연결
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 9876:3306 &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1234 mysql:5.6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mysql-접속&quot;&gt;MySQL 접속&lt;/h2&gt;

&lt;h4 id=&quot;1-docker-exec--it-c5f4d59d5bea-binbash&quot;&gt;1. &lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec -it c5f4d59d5bea /bin/bash&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;MySQL container의 terminal로 접속&lt;/p&gt;

&lt;h4 id=&quot;2-mysql--u-root--p&quot;&gt;2. &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -u root -p&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;MySQL 접속&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; c5f4d59d5bea /bin/bash
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@c5f4d59d5bea:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Enter password:
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;Welcome to the MySQL monitor.  Commands end with ;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;or &lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Your MySQL connection id is 1
Server version: 5.6.47 MySQL Community Server (GPL)

Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;Type 'help;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' or '&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' for help. Type '&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' to clear the current input statement.
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;mysql&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;root에서-mysql로-바로-접속&quot;&gt;root에서 MySQL로 바로 접속&lt;/h2&gt;

&lt;h4 id=&quot;root에서-mysql-접속-ip-확인&quot;&gt;root에서 MySQL 접속 IP 확인&lt;/h4&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker inspect c5f4d59d5bea
&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;      &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;mysql-client-core-설치&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql-client-core&lt;/code&gt; 설치&lt;/h4&gt;
&lt;p&gt;root에서 접속하기 위한 툴&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;mysql-client-core-5.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;root에서-mysql로-바로-접속-1&quot;&gt;root에서 MySQL로 바로 접속&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;MySQL port로 접속
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--host&lt;/span&gt; 172.17.0.2 &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt; 3306
&lt;span class=&quot;go&quot;&gt;Enter password:
Welcome to the MySQL monitor.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;docker host port로 접속
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--host&lt;/span&gt; 127.0.0.1  &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt; 9876
&lt;span class=&quot;go&quot;&gt;Enter password:
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;Welcome to the MySQL monitor.  Commands end with ;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;or &lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;관리자-역할을-할-user생성&quot;&gt;관리자 역할을 할 user생성&lt;/h4&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identified&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1234'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;affected&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;grant&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;privileges&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;affected&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;privileges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;affected&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;외부 접속 권한까지 부여&lt;/p&gt;

&lt;p&gt;restart MySQL container&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker restart c5f4d59d5bea
&lt;span class=&quot;go&quot;&gt;c5f4d59d5bea
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;EC2에서 9876 포트 오픈, SQL관리툴인 HeidiSQL 등 이용해 접속 가능&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;mac에서는 HeidiSQL 설치 바로 안됨..&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;EC2 IP와 포트, MySQL User/PW 사용해 접속
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;06-php-컨테이너와-mysql-컨테이너-연동해보기&quot;&gt;06 PHP 컨테이너와 MySQL 컨테이너 연동해보기&lt;/h1&gt;

&lt;h2 id=&quot;php-mysql-연동을-위한-setting&quot;&gt;php-MySQL 연동을 위한 Setting&lt;/h2&gt;
&lt;h4 id=&quot;dockerfile-수정하여-php56-mysql-package-설치&quot;&gt;Dockerfile 수정하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;php5.6-mysql&lt;/code&gt; package 설치&lt;/h4&gt;

&lt;p&gt;package install 내용 추가&lt;/p&gt;

&lt;div class=&quot;language-docker highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; php5.6-mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;dockerfile-실행-후-이미지-실행&quot;&gt;dockerfile 실행 후 이미지 실행&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Apache server, PHP, MySQL 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:~/example#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker build &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; example &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:~/example#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 80:80 &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /home/ubuntu/example/html:/var/www/html example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;php를-통해-mysql-접속&quot;&gt;php를 통해 MySQL 접속&lt;/h2&gt;
&lt;h4 id=&quot;jupyter를-통한-indexphp-수정&quot;&gt;jupyter를 통한 index.php 수정&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;지금까지는 vi를 통해 수정했으나,&lt;/li&gt;
  &lt;li&gt;jupyter를 통해서 수정 가능!
&lt;img src=&quot;/assets/jupyter-php.png&quot; alt=&quot;jupyter-php.png&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mysqli_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'54.180.30.186'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# EC2 Port&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'1234'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# DB Name&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'9876'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# DB Port&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mysqli_connect_errno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Connection Failed : &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mysqli_connect_error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# SQL 의 버전 값 출력&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT VERSION()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mysqli_query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mysqli_fetch_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;VERSION()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;일반적으로 RMDB를 container에 실어서 운영하기보다는 AWS RDS 이용&lt;/em&gt;&lt;/p&gt;</content><author><name>gitgitWi</name></author><category term="Docker" /><category term="LectureNotes" /><category term="AWS" /><category term="동빈나" /><category term="Apache Server" /><category term="MySQL" /><summary type="html">05 Docker로 MySQL 컨테이너 만들어 보기</summary></entry><entry><title type="html">LN-Docker-동빈나’s Docker 활용 7강~9강</title><link href="http://localhost:4000/study/aws/docker/ln-aws-0709/" rel="alternate" type="text/html" title="LN-Docker-동빈나's Docker 활용 7강~9강" /><published>2020-04-04T00:00:00+09:00</published><updated>2020-04-04T00:00:00+09:00</updated><id>http://localhost:4000/study/aws/docker/ln-aws-0709</id><content type="html" xml:base="http://localhost:4000/study/aws/docker/ln-aws-0709/">&lt;h1 id=&quot;07-aws-rds를-이용한-데이터베이스-구축&quot;&gt;07 AWS RDS를 이용한 데이터베이스 구축&lt;/h1&gt;

&lt;h2 id=&quot;amazon-rds를-통한-db-생성&quot;&gt;Amazon RDS를 통한 DB 생성&lt;/h2&gt;

&lt;h4 id=&quot;한글-parameter-설정&quot;&gt;한글 parameter 설정&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;parameter 생성&lt;/li&gt;
  &lt;li&gt;parameter 수정
    &lt;ul&gt;
      &lt;li&gt;‘char’, ‘collation’ 검색&lt;/li&gt;
      &lt;li&gt;가능한 모든 encoding을 &lt;code class=&quot;highlighter-rouge&quot;&gt;UTF8&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;UTF8_general_ci&lt;/code&gt;로 설정
  &lt;img src=&quot;/assets/images/rds-params-utf-8.png&quot; alt=&quot;rds-params-utf-8&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;db-생성&quot;&gt;DB 생성&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;MySQL 5.6&lt;/li&gt;
  &lt;li&gt;template &amp;gt; Free-Tier ; 반드시 확인!&lt;/li&gt;
  &lt;li&gt;Master User Name / PW ; 외부접속 위한 ID/PW&lt;/li&gt;
  &lt;li&gt;보안 그룹
    &lt;ul&gt;
      &lt;li&gt;일반적으로 가장 중요한 곳이 DB 이므로 특정 server에서만 접근 가능하도록 설정&lt;/li&gt;
      &lt;li&gt;여기서는 실습을 위해 모든 server에서 접속 가능하도록 열어놓음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DB port : 3306&lt;/li&gt;
  &lt;li&gt;DB parameter group : 위에서 설정한 parameter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;생성 완료까지는 몇분 소요될 수 있음&lt;/p&gt;

&lt;h4 id=&quot;생성-이후-dashboard에서-end-point-확인--db-접속주소&quot;&gt;생성 이후 dashboard에서 end-point 확인 : DB 접속주소&lt;/h4&gt;

&lt;h4 id=&quot;ec2-root-terminal에서-mysql-접속&quot;&gt;EC2 root terminal에서 MySQL 접속&lt;/h4&gt;

&lt;p&gt;Syntax : &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -h {end-point-value} -P {port} -u {master-user-name} -p&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ex.&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;:~#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; mysql.@@@@.rds.amazonaws.com &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; 3306 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; gitgitwi &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Enter password:
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;Welcome to the MySQL monitor.  Commands end with ;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;or &lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;php-mysql-연동-테스트&quot;&gt;php-MySQL 연동 테스트&lt;/h2&gt;
&lt;h4 id=&quot;php-파일-수정&quot;&gt;php 파일 수정&lt;/h4&gt;
&lt;p&gt;DB 생성시 입력한 그대로&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;접속 주소&lt;/li&gt;
  &lt;li&gt;접속 ID / PW
&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;08-github에-docker-프로젝트-올리기&quot;&gt;08 GitHub에 Docker 프로젝트 올리기&lt;/h1&gt;

&lt;h4 id=&quot;create-new-repository&quot;&gt;create new repository&lt;/h4&gt;

&lt;p&gt;port 보안을 위해 private repository로 만들어야 함&lt;/p&gt;

&lt;h2 id=&quot;aws-github-연동&quot;&gt;AWS-GitHub 연동&lt;/h2&gt;

&lt;p&gt;EC2 Ubuntu18에는 기본적으로 Git이 설치되어 있음&lt;/p&gt;

&lt;p&gt;local repository에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;index.php&lt;/code&gt; 생성&lt;/p&gt;

&lt;p&gt;이전에 만든  그대로 복사&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@@@:~#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git clone https://github.com/ezerwi/AWS-Docker-SQL-test.git
&lt;span class=&quot;go&quot;&gt;Cloning into 'AWS-Docker-SQL-test'...
Username for 'https://github.com': ezerwi
Password for 'https://ezerwi@github.com':

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@@@:~#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;AWS-Docker-SQL-test
&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@@@:~/AWS-Docker-SQL-test#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi Dockerfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;작업 내용 확인하고 git add &amp;amp; commit&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@@@:~/AWS-Docker-SQL-test#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Dockerfile  index.php

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@@@:~/AWS-Docker-SQL-test#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;index.php
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@@@:~/AWS-Docker-SQL-test#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@@@:~/AWS-Docker-SQL-test#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;inital project&quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-@@@@@@:~/AWS-Docker-SQL-test#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git push
&lt;span class=&quot;go&quot;&gt;Username for 'https://github.com': ezerwi
Password for 'https://ezerwi@github.com':
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;09-dockerhub와-github-연동하기&quot;&gt;09 DockerHub와 GitHub 연동하기&lt;/h1&gt;

&lt;h3 id=&quot;dockerhub-github-연동-과정&quot;&gt;DockerHub-GitHub 연동 과정&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Dockerfile Source Code 수정&lt;/li&gt;
  &lt;li&gt;GitHub commit-push&lt;/li&gt;
  &lt;li&gt;DockerHub에서 수정된 내용대로 알아서 re-build&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;new-dockerhub-repository&quot;&gt;New DockerHub Repository&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Build Setting : Github&lt;/li&gt;
  &lt;li&gt;Create &amp;amp; Build&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;auto-build 약 5~10분 정도 걸림&lt;/p&gt;

&lt;h2 id=&quot;dockerhub-통해&quot;&gt;DockerHub 통해&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker push gitgitwi/git-test:tagname&lt;/code&gt;
&lt;img src=&quot;/assets/images/dockerhub-push_2um6jm262.png&quot; alt=&quot;dockerhub-push_2um6jm262&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;readmemd-작성&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Readme.md&lt;/code&gt; 작성&lt;/h4&gt;

&lt;dl&gt;
  &lt;dt&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Readme.md&lt;/code&gt;&lt;/dt&gt;
  &lt;dd&gt;image에 대한 안내&lt;/dd&gt;
  &lt;dd&gt;대소문자 틀리면 DockerHub에서 build ERROR&lt;/dd&gt;
&lt;/dl&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# AWS-Docker-SQL-test&lt;/span&gt;
&lt;span class=&quot;gh&quot;&gt;# test for Docker build&lt;/span&gt;

&lt;span class=&quot;gu&quot;&gt;### Installation&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;
cd /home
git clone https://github.com/ezerwi/AWS-Docker-SQL-test
cd AWS-Docker-SQL-test
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;

&lt;span class=&quot;gu&quot;&gt;### RUN&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;
&lt;span class=&quot;gh&quot;&gt;# login for private docker repository&lt;/span&gt;
docker login
docker pull gitgitwi/git-test

&lt;span class=&quot;gh&quot;&gt;# set directory 'Project' to save php file&lt;/span&gt;
docker run -p 80:80 -v /home/AWS-Docker-SQL-test/Project:/var/www/html gitgitwi/git-test
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/dockerhub-automated-builds.png&quot; alt=&quot;dockerhub-automated-builds&quot; /&gt;&lt;/p&gt;</content><author><name>gitgitWi</name></author><category term="Docker" /><category term="동빈나" /><category term="LectureNotes" /><category term="AWS" /><category term="AWS RDS" /><category term="MySQL" /><category term="GitHub" /><category term="DockerHub" /><summary type="html">07 AWS RDS를 이용한 데이터베이스 구축</summary></entry><entry><title type="html">LN-Docker-동빈나’s Docker 활용 10강~11강</title><link href="http://localhost:4000/study/aws/docker/ln-aws-10~11/" rel="alternate" type="text/html" title="LN-Docker-동빈나's Docker 활용 10강~11강" /><published>2020-04-04T00:00:00+09:00</published><updated>2020-04-04T00:00:00+09:00</updated><id>http://localhost:4000/study/aws/docker/ln-aws-10~11</id><content type="html" xml:base="http://localhost:4000/study/aws/docker/ln-aws-10~11/">&lt;h1 id=&quot;10-jenkins를-이용해-docker-프로젝트-빌드해보기&quot;&gt;10 Jenkins를 이용해 Docker 프로젝트 빌드해보기&lt;/h1&gt;

&lt;h2 id=&quot;jenkins를-활용한-build-자동화&quot;&gt;Jenkins를 활용한 Build 자동화&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;docker-in-docker-방식&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Docker in Docker&lt;/code&gt; 방식&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;jenkins-설치-및-실행&quot;&gt;Jenkins 설치 및 실행&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Jenkins도 기본포트 == 8080&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jenkins 안에서 php가 구동되도록&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:~/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker pull jenkins/jenkins:lts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;LTS tag 붙이지 않고 설치할 경우 plugins 설치 시 ERROR&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jenkins-installation-failures.png&quot; alt=&quot;jenkins-installation-failures&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;jenkins의 repository가 변경되어서 그렇다고 함..&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d -p 8080:8080 -v /home/jenkins/:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -u root jenkins/jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;실행 확인 후 EC2 보안설정으로 open 8080 port&lt;/li&gt;
  &lt;li&gt;EC2 IP:8080으로 접속하여 Jenkins 실행 확인
&lt;img src=&quot;/assets/images/jenkins-start.png&quot; alt=&quot;jenkins-start&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Jenkins 초기 비번 확인
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;docker logs {ContainerID}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;plugins 설치, 계정 설정 등 setting 이후 Jenkins 첫 화면&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/64C9F77C-DFD6-4806-89DC-E3A38DD9A942_1_105_c.jpeg&quot; alt=&quot;64C9F77C-DFD6-4806-89DC-E3A38DD9A942_1_105_c&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;jenkins로-docker-auto-build-구현&quot;&gt;Jenkins로 Docker Auto-Build 구현&lt;/h4&gt;

&lt;p&gt;Freestyle Project 선택&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Screen%20Shot%202020-04-05%20at%203.48.30.png&quot; alt=&quot;Screen Shot 2020-04-05 at 3.48.30&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Build &amp;gt; Execute Shell&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;여기에서 이전에 github &lt;code class=&quot;highlighter-rouge&quot;&gt;readme.md&lt;/code&gt;로 만든 내용 입력&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Screen%20Shot%202020-04-05%20at%203.53.05.png&quot; alt=&quot;Screen Shot 2020-04-05 at 3.53.05&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;아직은 Jenkins에 Docker를 설치하지 않아 ERROR&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Screen%20Shot%202020-04-05%20at%203.54.16.png&quot; alt=&quot;Screen Shot 2020-04-05 at 3.54.16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jenkins의 bash 에서 Docker 설치&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ip-172-31-45-116:~/AWS-Docker-SQL-test#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; c6595515894f /bin/bash
&lt;span class=&quot;gp&quot;&gt;root@c6595515894f:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSLO&lt;/span&gt; https://get.docker.com/builds/Linux/x86_64/docker-17.04.0-ce.tgz
&lt;span class=&quot;gp&quot;&gt;root@c6595515894f:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;xzvf docker-17.04.0-ce.tgz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;용량 절약을 위해 Jenkins 내부 Docker 설치 파일 삭제&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@c6595515894f:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;/

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@c6595515894f:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;docker/docker /usr/local/bin
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@c6595515894f:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; docker docker-17.04.0-ce.tgz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jenkins 내부 Docker Login&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@c6595515894f:/#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;docker login
&lt;span class=&quot;go&quot;&gt;Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: gitgitwi
Password:
Login Succeeded
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone&lt;/code&gt;으로 Dockerfile 설치 및 확인&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@c6595515894f:/# cd /home

root@c6595515894f:/home# git clone https://github.com/ezerwi/AWS-Docker-SQL-test

root@15b7c3a5a0a6:/home# ls
AWS-Docker-SQL-test
root@15b7c3a5a0a6:/home# cd AWS-Docker-SQL-test
root@15b7c3a5a0a6:/home/AWS-Docker-SQL-test# ls
Project  Readme.md
root@15b7c3a5a0a6:/home/AWS-Docker-SQL-test# cd Project
root@15b7c3a5a0a6:/home/AWS-Docker-SQL-test/Project# ls
Dockerfile  index.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;11-jenkins를-활용해-원격에서-서버-프로그램-빌드하기&quot;&gt;11 Jenkins를 활용해 원격에서 서버 프로그램 빌드하기&lt;/h1&gt;

&lt;p&gt;현재 실행중인 Jenkins 내부 container 종료, Jenkins가 설치된 container만 남겨둔다&lt;/p&gt;

&lt;h2 id=&quot;jenkins-project-build-수정&quot;&gt;Jenkins project build 수정&lt;/h2&gt;</content><author><name>gitgitWi</name></author><category term="Docker" /><category term="동빈나" /><category term="LectureNotes" /><category term="AWS" /><category term="Jenkins" /><summary type="html">10 Jenkins를 이용해 Docker 프로젝트 빌드해보기</summary></entry></feed>